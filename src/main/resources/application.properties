spring.application.name=adote-me-api

# Configura\u00e7\u00e3o da API do Cloudinary

# Nome da nuvem do Cloudinary onde os arquivos ser\u00e3o armazenados.
# O 'cloud-name' \u00e9 \u00fanico para cada conta do Cloudinary e \u00e9 utilizado para identificar a nuvem de armazenamento.
cloudinary.cloud-name=diwrai6j3

# Chave da API do Cloudinary que ser\u00e1 usada para autentica\u00e7\u00e3o nas solicita\u00e7\u00f5es feitas para a API.
# A chave da API \u00e9 fornecida pelo Cloudinary e deve ser mantida em segredo.
cloudinary.api-key=189631743498546

# Segredo da chave da API do Cloudinary.
# O segredo \u00e9 um valor sens\u00edvel utilizado junto com a chave para autentica\u00e7\u00e3o segura nas solicita\u00e7\u00f5es.
# N\u00e3o deve ser compartilhado publicamente.
cloudinary.api-secret=dl05hEQWSAhcIHHUftw_Ocq-W_0

# Limita o tamanho m\u00e1ximo do arquivo enviado no corpo da requisi\u00e7\u00e3o HTTP.
# Este valor \u00e9 configurado para 10MB e controla o tamanho de qualquer arquivo que seja enviado pelo cliente (ex: imagens, v\u00eddeos, documentos).
# Quando o arquivo enviado excede esse tamanho, o Spring Boot rejeitar\u00e1 a requisi\u00e7\u00e3o com erro 413 (Request Entity Too Large).
spring.servlet.multipart.max-file-size=10MB

# Limita o tamanho m\u00e1ximo de toda a requisi\u00e7\u00e3o HTTP, que inclui todos os dados (cabe\u00e7alhos, par\u00e2metros e arquivos).
# Esse valor tamb\u00e9m \u00e9 configurado para 10MB e controla o tamanho total da requisi\u00e7\u00e3o, garantindo que o servidor n\u00e3o sobrecarregue com dados muito grandes.
# Se o total de dados enviados na requisi\u00e7\u00e3o (incluindo o arquivo) exceder esse limite, a requisi\u00e7\u00e3o ser\u00e1 rejeitada com erro 413.
spring.servlet.multipart.max-request-size=10MB
