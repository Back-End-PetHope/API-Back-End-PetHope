name: Build and Deploy

on:
  push:
    branches:
      - "main"
      - "dev_main*"
  pull_request:
    branches:
      - "main"

jobs:
  build_and_test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 23
        uses: actions/setup-java@v3
        with:
          java-version: "23"
          distribution: "temurin"
          cache: "maven"

      - name: Cache Maven dependencies
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: maven-${{ runner.os }}-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            maven-${{ runner.os }}-

      - name: Build and Test with Maven
        run: mvn clean package -DskipTests=false

      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: app-jar
          path: target/

      - name: Build Docker image for test
        run: docker build -t pethopeapi:latest .

      - name: Run Docker container for testing
        run: docker run -d -p 8080:8080 --name pethopeapi_container pethopeapi:latest

      - name: Wait for the application to start
        run: sleep 10

      - name: Run health check
        run: curl -f http://localhost:8080/api/actuator/health

      - name: Stop Docker container
        run: docker stop pethopeapi_container

  docker_push:
    runs-on: ubuntu-latest
    needs: build_and_test
    if: github.ref == 'refs/heads/main'

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Download build artifact
        uses: actions/download-artifact@v4
        with:
          name: app-jar
          path: target/

      - name: Extract version from the merged branch
        id: version
        run: |
          if [[ $GITHUB_EVENT_NAME == "push" && $GITHUB_REF == "refs/heads/main" ]]; then
            COMMIT_MESSAGE=$(jq -r '.head_commit.message' $GITHUB_EVENT_PATH)
            echo "Commit message: $COMMIT_MESSAGE"  
            PR_BRANCH=$(echo $COMMIT_MESSAGE | grep -oP '(?<=Back-End-PetHope/)(\S+)')
            echo "PR Branch: $PR_BRANCH" 

            if [[ $PR_BRANCH =~ ^dev_main_v([0-9]+\.[0-9]+\.[0-9]+)([a-zA-Z0-9]*)$ ]]; then
              VERSION="${BASH_REMATCH[1]}" 
              echo "VERSION=$VERSION" >> $GITHUB_ENV  
            else
              echo "VERSION=latest" >> $GITHUB_ENV
            fi
          fi

      - name: Build Docker image for push
        run: docker build -t pethopeapi:latest .

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_ACCESS_TOKEN }}

      - name: Tag and Push Docker image
        run: |
          IMAGE_NAME=${{ secrets.DOCKER_USERNAME }}/pethopeapi
          
          echo "Tagging image: $IMAGE_NAME with version: $VERSION"
          docker tag pethopeapi:latest $IMAGE_NAME:$VERSION
          echo "Pushing $IMAGE_NAME:$VERSION"
          docker push $IMAGE_NAME:$VERSION
          echo "Pushing $IMAGE_NAME:latest"
          docker push $IMAGE_NAME:latest

  deploy:
    runs-on: ubuntu-latest
    needs: docker_push
    if: github.ref == 'refs/heads/main'

    steps:
      - name: Trigger Render deployment
        env:
          deploy_url: ${{ secrets.RENDER_DEPLOY_HOOK_URL }}
        run: |
          curl -X POST "$deploy_url"
